# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
  branches:
    include:
      - "*"

jobs:
- job:
  displayName: "amd64/ubuntu-20.04"
  pool:
    vmImage: 'ubuntu-20.04'

  steps:
  - script: |
      sudo apt-get update
      sudo apt-get install -y make libtool m4 autoconf dh-exec debhelper cmake pkg-config \
                       libhiredis-dev libnl-3-dev libnl-genl-3-dev libnl-route-3-dev libnl-nf-3-dev swig3.0 \
                       libpython2.7-dev libgtest-dev libboost-dev libboost1.71-dev
      sudo apt-get install -y sudo
      sudo apt-get install -y redis-server redis-tools
      sudo apt-get install -y python3-pip
      sudo pip3 install pytest
      sudo apt-get install -y python
      sudo apt-get install cmake libgtest-dev
      cd /usr/src/gtest && sudo cmake . && sudo make
    displayName: "Install dependencies"
  - script: |
      dpkg-buildpackage -rfakeroot -us -uc -b -j$(nproc) && cp ../*.deb .
    displayName: "Compile sonic swss common"
  - publish: $(System.DefaultWorkingDirectory)/
    artifact: sonic-swss-common.amd64.ubuntu20_04
    displayName: "Archive swss common debian packages"

- job:
  displayName: "amd64"
  pool:
    vmImage: 'ubuntu-20.04'

  container:
    image: sonicdev-microsoft.azurecr.io:443/sonic-slave-buster:latest

  steps:
  - script: |
      sudo apt-get install -qq -y \
        libhiredis-dev \
        libnl-3-dev \
        libnl-genl-3-dev \
        libnl-route-3-dev \
        libnl-nf-3-dev \
        swig3.0
    displayName: "Install dependencies"
  - script: |
      ./autogen.sh
      dpkg-buildpackage -us -uc -b -j$(nproc) && cp ../*.deb .
    displayName: "Compile sonic swss common"
  - script: |
      sudo pip install Pympler==0.8
      sudo apt-get install -y redis-server
      sudo sed -i 's/notify-keyspace-events ""/notify-keyspace-events AKE/' /etc/redis/redis.conf
      sudo sed -ri 's/^# unixsocket/unixsocket/' /etc/redis/redis.conf
      sudo sed -ri 's/^unixsocketperm .../unixsocketperm 777/' /etc/redis/redis.conf
      sudo sed -ri 's/redis-server.sock/redis.sock/' /etc/redis/redis.conf
      sudo service redis-server restart

      sudo dpkg -i libswsscommon_*.deb
      sudo dpkg -i python-swsscommon_*.deb

      sudo ./tests/tests && redis-cli FLUSHALL && pytest
    displayName: "Run swss common unit tests"
  - publish: $(System.DefaultWorkingDirectory)/
    artifact: sonic-swss-common
    displayName: "Archive swss common debian packages"

- job:
  displayName: "arm64"
  timeoutInMinutes: 180
  pool: sonicbld

  container:
    image: sonicdev-microsoft.azurecr.io:443/sonic-slave-buster-arm64:latest

  steps:
  - script: |
      sudo apt-get install -qq -y \
        libhiredis-dev \
        libnl-3-dev \
        libnl-genl-3-dev \
        libnl-route-3-dev \
        libnl-nf-3-dev \
        swig3.0
    displayName: "Install dependencies"
  - script: |
      ./autogen.sh
      dpkg-buildpackage -us -uc -b -j$(nproc) && cp ../*.deb .
    displayName: "Compile sonic swss common"
  - publish: $(System.DefaultWorkingDirectory)/
    artifact: sonic-swss-common.arm64
    displayName: "Archive swss common debian packages"

- job:
  displayName: "armhf"
  timeoutInMinutes: 180
  pool: sonicbld

  container:
    image: sonicdev-microsoft.azurecr.io:443/sonic-slave-buster-armhf:latest

  steps:
  - script: |
      sudo apt-get install -qq -y \
        libhiredis-dev \
        libnl-3-dev \
        libnl-genl-3-dev \
        libnl-route-3-dev \
        libnl-nf-3-dev \
        swig3.0
    displayName: "Install dependencies"
  - script: |
      ./autogen.sh
      dpkg-buildpackage -us -uc -b -j$(nproc) && cp ../*.deb .
    displayName: "Compile sonic swss common"
  - publish: $(System.DefaultWorkingDirectory)/
    artifact: sonic-swss-common.armhf
    displayName: "Archive swss common debian packages"
