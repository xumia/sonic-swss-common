# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
  branches:
    include:
      - "*"

stages:
- stage: Build

  jobs:
  - job:
    displayName: "amd64/ubuntu-20.04"
    pool:
      vmImage: 'ubuntu-20.04'

    steps:
    - script: |
        sudo apt-get update
        sudo apt-get install -y make libtool m4 autoconf dh-exec debhelper cmake pkg-config \
                         libhiredis-dev libnl-3-dev libnl-genl-3-dev libnl-route-3-dev libnl-nf-3-dev swig3.0 \
                         libpython2.7-dev libgtest-dev libboost-dev libboost1.71-dev
        sudo apt-get install -y sudo
        sudo apt-get install -y redis-server redis-tools
        sudo apt-get install -y python3-pip
        sudo pip3 install pytest
        sudo apt-get install -y python
        sudo apt-get install cmake libgtest-dev
        cd /usr/src/gtest && sudo cmake . && sudo make
      displayName: "Install dependencies"
    - script: |
        dpkg-buildpackage -rfakeroot -us -uc -b -j$(nproc) && cp ../*.deb .
      displayName: "Compile sonic swss common"
    - publish: $(System.DefaultWorkingDirectory)/
      artifact: sonic-swss-common.amd64.ubuntu20_04
      displayName: "Archive swss common debian packages"

  - template: .azure-pipelines/build-template.yml
    parameters:
      arch: amd64
      sonic_slave: sonic-slave-buster
      artifact_name: sonic-swss-common
      run_unit_test: true

  - template: .azure-pipelines/build-template.yml
    parameters:
      arch: armhf
      timeout: 180
      pool: sonicbld
      sonic_slave: sonic-slave-buster-armhf
      artifact_name: sonic-swss-common.armhf

  - template: .azure-pipelines/build-template.yml
    parameters:
      arch: arm64
      timeout: 180
      pool: sonicbld
      sonic_slave: sonic-slave-buster-arm64
      artifact_name: sonic-swss-common.arm64
