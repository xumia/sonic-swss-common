parameters:
- name: arch
  type: string
  values:
  - amd64
  - armhf
  - arm64
  default: amd64

- name: pool
  type: string
  values:
  - sonicbld
  - default
  default: default

- name: timeout
  type: number
  default: 60

- name: sonic_slave
  type: string

- name: sairedis_artifact_name
  type: string

- name: swss_common_artifact_name
  type: string

- name: artifact_name
  type: string

jobs:
- job:
  displayName: ${{ parameters.arch }}
  timeoutInMinutes: ${{ parameters.timeout }}

  pool:
    ${{ if ne(parameters.pool, 'default') }}:
      name: ${{ parameters.pool }}
    ${{ if eq(parameters.pool, 'default') }}:
      vmImage: 'ubuntu-20.04'

  container:
    image: sonicdev-microsoft.azurecr.io:443/${{ parameters.sonic_slave }}:latest

  steps:
  - script: |
      sudo apt-get install -y libhiredis0.14 libhiredis-dev
      sudo apt-get install -y libzmq5 libzmq3-dev
      sudo apt-get install -qq -y \
          libhiredis-dev \
          libnl-3-dev \
          libnl-genl-3-dev \
          libnl-route-3-dev \
          libnl-nf-3-dev \
          swig3.0
      sudo apt-get install -y libdbus-1-3
      sudo apt-get install -y libteam-dev \
          libteam5 \
          libteamdctl0
    displayName: "Install dependencies"
  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: ${{ parameters.swss_common_artifact_name }}
    displayName: "Download sonic swss common deb packages"
  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: ${{ parameters.sairedis_artifact_name }}
    displayName: "Download sonic sairedis deb packages"
  - script: |
      sudo dpkg -i libswsscommon_1.0.0_${{ parameters.arch }}.deb
      sudo dpkg -i libswsscommon-dev_1.0.0_${{ parameters.arch }}.deb
      sudo dpkg -i libsaivs_*.deb
      sudo dpkg -i libsaivs-dev_*.deb
      sudo dpkg -i libsairedis_*.deb
      sudo dpkg -i libsairedis-dev_*.deb
      sudo dpkg -i libsaimetadata_*.deb
      sudo dpkg -i libsaimetadata-dev_*.deb
      sudo dpkg -i syncd-vs_*.deb
    workingDirectory: $(Pipeline.Workspace)
    displayName: "Install sonic swss common and sairedis"
  - checkout: sonic-swss
    path: s
    submodules: true
  - script: |
      ./autogen.sh
      dpkg-buildpackage -us -uc -b -j$(nproc) && cp ../*.deb .
    displayName: "Compile sonic swss"
  - publish: $(System.DefaultWorkingDirectory)/
    artifact: ${{ parameters.artifact_name }}
    displayName: "Archive swss debian packages"
